generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model quests {
  id          Int         @id @default(autoincrement())
  inserted_at DateTime    @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  title       String
  description String
  tags        String
  questions   questions[]
  author      users       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_id     String
}

model questions {
  id       Int       @id @default(autoincrement())
  type     step_type
  guide    String?
  question String?
  options  String[]
  answer   String?
  quests   quests    @relation(fields: [questsId], references: [id])
  questsId Int
}

model role_permissions {
  id         Int            @id @default(autoincrement())
  role       app_role
  permission app_permission

  @@unique([role, permission])
}

model user_roles {
  id      Int      @id @default(autoincrement())
  user_id String
  role    app_role
  users   users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, role])
}

model users {
  id                  String       @id @default(cuid())
  username            String?
  experience          Int          @default(0)
  address             String       @unique
  completed_quest_ids Int[]
  quests              quests[]
  user_roles          user_roles[]
}

enum step_type {
  guide
  question
}

enum app_permission {
  quests_delete @map("quests.delete")
}

enum app_role {
  admin
  moderator
  builder
}
